{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{182:function(t,a,s){\"use strict\";s.r(a);var e=s(0),l=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s(\"div\",{staticClass:\"content\"},[s(\"p\",[t._v(\"本地git库：\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"graph LR\\n本地目录--\\x3e暂存库\\n暂存库--\\x3e版本库\\n版本库--\\x3e远程仓库\\n\\n\")])])]),s(\"p\",[t._v('本地文件--- ==git add== ---\\x3e暂存库--- ==git commit -m \"说明\"==---\\x3e版本库---git  push---\\x3e远程仓库')]),t._v(\" \"),s(\"hr\"),t._v(\" \"),s(\"ol\",[s(\"li\",[t._v(\"初始化git仓库\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"git init\\n\")])])]),s(\"ol\",{attrs:{start:\"2\"}},[s(\"li\",[t._v(\"查看git仓库状态\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"git status\\n\")])])]),s(\"ol\",{attrs:{start:\"3\"}},[s(\"li\",[t._v(\"查看所有产生的 commit 记录\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"git log\\n\")])])]),s(\"ol\",{attrs:{start:\"4\"}},[s(\"li\",[t._v(\"查看本地分支情况\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"git branch\\n\")])])]),s(\"ol\",{attrs:{start:\"5\"}},[s(\"li\",[t._v(\"创建分支名为a的分支\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"git branch a\\n\")])])]),s(\"ol\",{attrs:{start:\"6\"}},[s(\"li\",[t._v(\"切换分支\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"git checkout a\\n\")])])]),s(\"ol\",{attrs:{start:\"7\"}},[s(\"li\",[t._v(\"新建并切换分支\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"git checkout -b a\\n\")])])]),s(\"ol\",{attrs:{start:\"8\"}},[s(\"li\",[t._v(\"删除分支\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"git branch -d a  （删除已合并的分支）\\ngit branch -D a  （强制删除分支）\\n\\n\")])])]),s(\"ol\",{attrs:{start:\"9\"}},[s(\"li\",[t._v(\"合并分支 （a是master的分支，把a合并到master主分支）\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"git checkout master\\ngit merge a\\n\")])])]),s(\"ol\",{attrs:{start:\"10\"}},[s(\"li\",[t._v(\"给代码添加版本标签 (git commit之后添加)\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"1. 给当前代码添加 v0.1版本标签\\ngit tag v0.1\\n2. 查看当前的项目的标签列表\\ngit tag\\n3. 切换标签版本\\ngit checkout v0.1(标签名)\\n\\n\")])])]),s(\"ol\",{attrs:{start:\"11\"}},[s(\"li\",[t._v(\"自定义命令别名==alias.别名==\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"git config --global alias.co checkout\\n执行 :\\ngit co\\n\\n一个很吊的查看commit记录的配置：\\ngit config --global alias.lg \\\"log --graph --pretty=format:'%Cred%h%Crese - %C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative\\\"\\n执行：\\ngit lg\\n\")])])]),s(\"ol\",{attrs:{start:\"12\"}},[s(\"li\",[t._v(\"git pull rebase 冲突时：\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"1. 先解决冲突\\n2. git add  提交修改\\n3. git rebase --continue 将余下的补丁应用\\n\")])])]),s(\"ol\",{attrs:{start:\"13\"}},[s(\"li\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"git rebase --abort 会回到rebase操作之前的状态，之前的提交的不会丢弃；\\n\")])])]),s(\"ol\",{attrs:{start:\"14\"}},[s(\"li\",[t._v(\"git rebase --skip\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"则会将引起冲突的部分代码丢弃掉；\\n例如：\\n1. master 分支和a分支的a.txt内容都为：\\nmmmmmmm\\n1111\\n2. 现在两个分支都修改了同一个地方：\\n3. master的a.txt修改为:\\nmaster\\n1111\\n4. a分支的a.txt修改为：\\naaaa\\n2222\\n5. 在master执行 git rebase a （将a的内容合并到master中）后提示冲突\\n6. 当执行git rebase --skip后：\\n会将master的冲突代码丢弃掉，所以master的a.txt的内容变成：\\naaaa\\n2222\\n\")])])]),s(\"ol\",{attrs:{start:\"15\"}},[s(\"li\",[t._v(\"git rebase --continue\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v('用于修复冲突，提示开发者，一步一步地有没有解决冲突，fix conflicts and then run \"git rebase --continue\"\\n')])])]),s(\"ol\",{attrs:{start:\"16\"}},[s(\"li\",[t._v(\"查看本地与远程仓库的链接源、新增链接源\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"查看：git remote -v\\n新增：git remote add 'git仓库地址'\\n\")])])]),s(\"ol\",{attrs:{start:\"17\"}},[s(\"li\",[t._v(\"拉取远程指定分支到本地\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"git pull --rebase <远程主机名> <远程分支名>:<本地分支名>\\n\")])])]),s(\"ol\",{attrs:{start:\"18\"}},[s(\"li\",[t._v(\"将本地分支的更新，推送到远程主机\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"首次提交 加参数 -u \\ngit [- u] push <远程主机名> <本地分支名>:<远程分支名>\\n\")])])]),s(\"ol\",{attrs:{start:\"19\"}},[s(\"li\",[t._v(\"撤销工作区的修改\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"指定文件：git checkout -- <文件名>\\n全部文件：git checkout .\\n\")])])]),s(\"ol\",{attrs:{start:\"20\"}},[s(\"li\",[t._v(\"撤销暂存区的修改 （git add之后的）\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"git reset HEAD\\n\")])])]),s(\"ol\",{attrs:{start:\"21\"}},[s(\"li\",[t._v(\"撤销版本库的修改 （git commit之后的）\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"1. git log \\n找到想要撤销的id \\n2. git reset -–hard id \\n完成撤销,同时将代码恢复到前一commit_id 对应的版本 \\n\")])])]),s(\"p\",[s(\"img\",{attrs:{src:\"https://marklodato.github.io/visual-git-guide/basic-usage.svg\",alt:\"image\"}})])])}],!1,null,null,null);l.options.__file=\"git命令.md\";a.default=l.exports}}]);","extractedComments":[]}